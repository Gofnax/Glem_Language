Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> function_definition
Rule 6     statement -> expression_function_call SEMICOLON
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression MULTIPLY expression
Rule 10    expression -> expression DIVIDE expression
Rule 11    expression -> expression MODULO expression
Rule 12    expression -> expression AND expression
Rule 13    expression -> expression OR expression
Rule 14    expression -> expression NOTEQUAL expression
Rule 15    expression -> expression EQUAL expression
Rule 16    expression -> expression GREATER expression
Rule 17    expression -> expression LESS expression
Rule 18    expression -> expression GREATEREQUAL expression
Rule 19    expression -> expression LESSEQUAL expression
Rule 20    expression -> NOT expression
Rule 21    expression -> LPAREN expression RPAREN
Rule 22    expression -> NUMBER
Rule 23    expression -> BOOLEAN
Rule 24    expression -> IDENTIFIER
Rule 25    expression -> LAMBDA IDENTIFIER . expression
Rule 26    function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON
Rule 27    arg_list -> IDENTIFIER
Rule 28    arg_list -> IDENTIFIER COMMA arg_list
Rule 29    arg_list -> NUMBER
Rule 30    expression_function_call -> IDENTIFIER LPAREN arg_list RPAREN
Rule 31    empty -> <empty>

Terminals, with rules where they appear

.                    : 25
AND                  : 12
BOOLEAN              : 23
COMMA                : 26 28
DIVIDE               : 10
EQUAL                : 15
GREATER              : 16
GREATEREQUAL         : 18
IDENTIFIER           : 24 25 26 27 28 30
LAMBDA               : 25
LCURLY               : 26
LESS                 : 17
LESSEQUAL            : 19
LPAREN               : 21 26 30
MEY                  : 26
MINUS                : 8
MODULO               : 11
MULTIPLY             : 9
NOT                  : 20
NOTEQUAL             : 14
NUMBER               : 22 29
OR                   : 13
PLUS                 : 7
RCURLY               : 26
RPAREN               : 21 26 30
SEMICOLON            : 4 6 26
error                : 

Nonterminals, with rules where they appear

arg_list             : 26 28 30
empty                : 
expression           : 4 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 21 25 26
expression_function_call : 6
function_definition  : 5
program              : 0
statement            : 2 3
statement_list       : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . function_definition
    (6) statement -> . expression_function_call SEMICOLON
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression
    (26) function_definition -> . MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON
    (30) expression_function_call -> . IDENTIFIER LPAREN arg_list RPAREN

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LAMBDA          shift and go to state 12
    MEY             shift and go to state 13

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    expression_function_call       shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . function_definition
    (6) statement -> . expression_function_call SEMICOLON
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression
    (26) function_definition -> . MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON
    (30) expression_function_call -> . IDENTIFIER LPAREN arg_list RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LAMBDA          shift and go to state 12
    MEY             shift and go to state 13

    statement                      shift and go to state 14
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    expression_function_call       shift and go to state 6

state 3

    (3) statement_list -> statement .

    NOT             reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN         reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    LAMBDA          reduce using rule 3 (statement_list -> statement .)
    MEY             reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . SEMICOLON
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28


state 5

    (5) statement -> function_definition .

    NOT             reduce using rule 5 (statement -> function_definition .)
    LPAREN          reduce using rule 5 (statement -> function_definition .)
    NUMBER          reduce using rule 5 (statement -> function_definition .)
    BOOLEAN         reduce using rule 5 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 5 (statement -> function_definition .)
    LAMBDA          reduce using rule 5 (statement -> function_definition .)
    MEY             reduce using rule 5 (statement -> function_definition .)
    $end            reduce using rule 5 (statement -> function_definition .)


state 6

    (6) statement -> expression_function_call . SEMICOLON

    SEMICOLON       shift and go to state 29


state 7

    (20) expression -> NOT . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 30

state 8

    (21) expression -> LPAREN . expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 32

state 9

    (22) expression -> NUMBER .

    SEMICOLON       reduce using rule 22 (expression -> NUMBER .)
    PLUS            reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    MODULO          reduce using rule 22 (expression -> NUMBER .)
    AND             reduce using rule 22 (expression -> NUMBER .)
    OR              reduce using rule 22 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 22 (expression -> NUMBER .)
    EQUAL           reduce using rule 22 (expression -> NUMBER .)
    GREATER         reduce using rule 22 (expression -> NUMBER .)
    LESS            reduce using rule 22 (expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 22 (expression -> NUMBER .)
    LESSEQUAL       reduce using rule 22 (expression -> NUMBER .)
    RPAREN          reduce using rule 22 (expression -> NUMBER .)


state 10

    (23) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 23 (expression -> BOOLEAN .)
    PLUS            reduce using rule 23 (expression -> BOOLEAN .)
    MINUS           reduce using rule 23 (expression -> BOOLEAN .)
    MULTIPLY        reduce using rule 23 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 23 (expression -> BOOLEAN .)
    MODULO          reduce using rule 23 (expression -> BOOLEAN .)
    AND             reduce using rule 23 (expression -> BOOLEAN .)
    OR              reduce using rule 23 (expression -> BOOLEAN .)
    NOTEQUAL        reduce using rule 23 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 23 (expression -> BOOLEAN .)
    GREATER         reduce using rule 23 (expression -> BOOLEAN .)
    LESS            reduce using rule 23 (expression -> BOOLEAN .)
    GREATEREQUAL    reduce using rule 23 (expression -> BOOLEAN .)
    LESSEQUAL       reduce using rule 23 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 23 (expression -> BOOLEAN .)


state 11

    (24) expression -> IDENTIFIER .
    (30) expression_function_call -> IDENTIFIER . LPAREN arg_list RPAREN

    SEMICOLON       reduce using rule 24 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 24 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 24 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 24 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 24 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 24 (expression -> IDENTIFIER .)
    AND             reduce using rule 24 (expression -> IDENTIFIER .)
    OR              reduce using rule 24 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 24 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 24 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 24 (expression -> IDENTIFIER .)
    LESS            reduce using rule 24 (expression -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 24 (expression -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 24 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 33


state 12

    (25) expression -> LAMBDA . IDENTIFIER . expression

    IDENTIFIER      shift and go to state 34


state 13

    (26) function_definition -> MEY . LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON

    LCURLY          shift and go to state 35


state 14

    (2) statement_list -> statement_list statement .

    NOT             reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    LAMBDA          reduce using rule 2 (statement_list -> statement_list statement .)
    MEY             reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 15

    (4) statement -> expression SEMICOLON .

    NOT             reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 4 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 4 (statement -> expression SEMICOLON .)
    LAMBDA          reduce using rule 4 (statement -> expression SEMICOLON .)
    MEY             reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)


state 16

    (7) expression -> expression PLUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 36

state 17

    (8) expression -> expression MINUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 37

state 18

    (9) expression -> expression MULTIPLY . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 38

state 19

    (10) expression -> expression DIVIDE . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 39

state 20

    (11) expression -> expression MODULO . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 40

state 21

    (12) expression -> expression AND . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 41

state 22

    (13) expression -> expression OR . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 42

state 23

    (14) expression -> expression NOTEQUAL . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 43

state 24

    (15) expression -> expression EQUAL . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 44

state 25

    (16) expression -> expression GREATER . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 45

state 26

    (17) expression -> expression LESS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 46

state 27

    (18) expression -> expression GREATEREQUAL . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 47

state 28

    (19) expression -> expression LESSEQUAL . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 48

state 29

    (6) statement -> expression_function_call SEMICOLON .

    NOT             reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    BOOLEAN         reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    LAMBDA          reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    MEY             reduce using rule 6 (statement -> expression_function_call SEMICOLON .)
    $end            reduce using rule 6 (statement -> expression_function_call SEMICOLON .)


state 30

    (20) expression -> NOT expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 20 (expression -> NOT expression .)
    PLUS            reduce using rule 20 (expression -> NOT expression .)
    MINUS           reduce using rule 20 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 20 (expression -> NOT expression .)
    DIVIDE          reduce using rule 20 (expression -> NOT expression .)
    MODULO          reduce using rule 20 (expression -> NOT expression .)
    AND             reduce using rule 20 (expression -> NOT expression .)
    OR              reduce using rule 20 (expression -> NOT expression .)
    NOTEQUAL        reduce using rule 20 (expression -> NOT expression .)
    EQUAL           reduce using rule 20 (expression -> NOT expression .)
    GREATER         reduce using rule 20 (expression -> NOT expression .)
    LESS            reduce using rule 20 (expression -> NOT expression .)
    GREATEREQUAL    reduce using rule 20 (expression -> NOT expression .)
    LESSEQUAL       reduce using rule 20 (expression -> NOT expression .)
    RPAREN          reduce using rule 20 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MODULO          [ shift and go to state 20 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 31

    (24) expression -> IDENTIFIER .

    PLUS            reduce using rule 24 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 24 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 24 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 24 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 24 (expression -> IDENTIFIER .)
    AND             reduce using rule 24 (expression -> IDENTIFIER .)
    OR              reduce using rule 24 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 24 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 24 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 24 (expression -> IDENTIFIER .)
    LESS            reduce using rule 24 (expression -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 24 (expression -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 24 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 24 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 24 (expression -> IDENTIFIER .)


state 32

    (21) expression -> LPAREN expression . RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28


state 33

    (30) expression_function_call -> IDENTIFIER LPAREN . arg_list RPAREN
    (27) arg_list -> . IDENTIFIER
    (28) arg_list -> . IDENTIFIER COMMA arg_list
    (29) arg_list -> . NUMBER

    IDENTIFIER      shift and go to state 50
    NUMBER          shift and go to state 52

    arg_list                       shift and go to state 51

state 34

    (25) expression -> LAMBDA IDENTIFIER . . expression

    .               shift and go to state 53


state 35

    (26) function_definition -> MEY LCURLY . IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON

    IDENTIFIER      shift and go to state 54


state 36

    (7) expression -> expression PLUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 7 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 7 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 7 (expression -> expression PLUS expression .)
    AND             reduce using rule 7 (expression -> expression PLUS expression .)
    OR              reduce using rule 7 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 7 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 7 (expression -> expression PLUS expression .)
    LESS            reduce using rule 7 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! MULTIPLY        [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 37

    (8) expression -> expression MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 8 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 8 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 8 (expression -> expression MINUS expression .)
    AND             reduce using rule 8 (expression -> expression MINUS expression .)
    OR              reduce using rule 8 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 8 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 8 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 8 (expression -> expression MINUS expression .)
    LESS            reduce using rule 8 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 8 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 8 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! MULTIPLY        [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 38

    (9) expression -> expression MULTIPLY expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 9 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 9 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 9 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 9 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 9 (expression -> expression MULTIPLY expression .)
    MODULO          reduce using rule 9 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 9 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 9 (expression -> expression MULTIPLY expression .)
    NOTEQUAL        reduce using rule 9 (expression -> expression MULTIPLY expression .)
    EQUAL           reduce using rule 9 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 9 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 9 (expression -> expression MULTIPLY expression .)
    GREATEREQUAL    reduce using rule 9 (expression -> expression MULTIPLY expression .)
    LESSEQUAL       reduce using rule 9 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 9 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MODULO          [ shift and go to state 20 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 39

    (10) expression -> expression DIVIDE expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 10 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 10 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 10 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 10 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 10 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 10 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 10 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 10 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 10 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 10 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 10 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 10 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 10 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 10 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 10 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MODULO          [ shift and go to state 20 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 40

    (11) expression -> expression MODULO expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 11 (expression -> expression MODULO expression .)
    PLUS            reduce using rule 11 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 11 (expression -> expression MODULO expression .)
    MULTIPLY        reduce using rule 11 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 11 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 11 (expression -> expression MODULO expression .)
    AND             reduce using rule 11 (expression -> expression MODULO expression .)
    OR              reduce using rule 11 (expression -> expression MODULO expression .)
    NOTEQUAL        reduce using rule 11 (expression -> expression MODULO expression .)
    EQUAL           reduce using rule 11 (expression -> expression MODULO expression .)
    GREATER         reduce using rule 11 (expression -> expression MODULO expression .)
    LESS            reduce using rule 11 (expression -> expression MODULO expression .)
    GREATEREQUAL    reduce using rule 11 (expression -> expression MODULO expression .)
    LESSEQUAL       reduce using rule 11 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 11 (expression -> expression MODULO expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MODULO          [ shift and go to state 20 ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 41

    (12) expression -> expression AND expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 12 (expression -> expression AND expression .)
    AND             reduce using rule 12 (expression -> expression AND expression .)
    OR              reduce using rule 12 (expression -> expression AND expression .)
    RPAREN          reduce using rule 12 (expression -> expression AND expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28

  ! PLUS            [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! GREATEREQUAL    [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! LESSEQUAL       [ reduce using rule 12 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]


state 42

    (13) expression -> expression OR expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 13 (expression -> expression OR expression .)
    AND             reduce using rule 13 (expression -> expression OR expression .)
    OR              reduce using rule 13 (expression -> expression OR expression .)
    RPAREN          reduce using rule 13 (expression -> expression OR expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28

  ! PLUS            [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! GREATEREQUAL    [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! LESSEQUAL       [ reduce using rule 13 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]


state 43

    (14) expression -> expression NOTEQUAL expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    AND             reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    OR              reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    GREATER         reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    LESS            reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    GREATEREQUAL    reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    LESSEQUAL       reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 14 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 14 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression NOTEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression NOTEQUAL expression .) ]
  ! MODULO          [ reduce using rule 14 (expression -> expression NOTEQUAL expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 44

    (15) expression -> expression EQUAL expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 15 (expression -> expression EQUAL expression .)
    AND             reduce using rule 15 (expression -> expression EQUAL expression .)
    OR              reduce using rule 15 (expression -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 15 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 15 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 15 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 15 (expression -> expression EQUAL expression .)
    GREATEREQUAL    reduce using rule 15 (expression -> expression EQUAL expression .)
    LESSEQUAL       reduce using rule 15 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 15 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 15 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression EQUAL expression .) ]
  ! MODULO          [ reduce using rule 15 (expression -> expression EQUAL expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 45

    (16) expression -> expression GREATER expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 16 (expression -> expression GREATER expression .)
    AND             reduce using rule 16 (expression -> expression GREATER expression .)
    OR              reduce using rule 16 (expression -> expression GREATER expression .)
    NOTEQUAL        reduce using rule 16 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 16 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 16 (expression -> expression GREATER expression .)
    LESS            reduce using rule 16 (expression -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 16 (expression -> expression GREATER expression .)
    LESSEQUAL       reduce using rule 16 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 16 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 16 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GREATER expression .) ]
  ! MODULO          [ reduce using rule 16 (expression -> expression GREATER expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 46

    (17) expression -> expression LESS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 17 (expression -> expression LESS expression .)
    AND             reduce using rule 17 (expression -> expression LESS expression .)
    OR              reduce using rule 17 (expression -> expression LESS expression .)
    NOTEQUAL        reduce using rule 17 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 17 (expression -> expression LESS expression .)
    GREATER         reduce using rule 17 (expression -> expression LESS expression .)
    LESS            reduce using rule 17 (expression -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 17 (expression -> expression LESS expression .)
    LESSEQUAL       reduce using rule 17 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 17 (expression -> expression LESS expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 17 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LESS expression .) ]
  ! MODULO          [ reduce using rule 17 (expression -> expression LESS expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 47

    (18) expression -> expression GREATEREQUAL expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    AND             reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    OR              reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    NOTEQUAL        reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    EQUAL           reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    LESS            reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    LESSEQUAL       reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    RPAREN          reduce using rule 18 (expression -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 18 (expression -> expression GREATEREQUAL expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression GREATEREQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 18 (expression -> expression GREATEREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression GREATEREQUAL expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression GREATEREQUAL expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 48

    (19) expression -> expression LESSEQUAL expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    AND             reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    OR              reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    NOTEQUAL        reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    EQUAL           reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    GREATER         reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    LESS            reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    GREATEREQUAL    reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 19 (expression -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20

  ! PLUS            [ reduce using rule 19 (expression -> expression LESSEQUAL expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LESSEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression LESSEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression LESSEQUAL expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression LESSEQUAL expression .) ]
  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOTEQUAL        [ shift and go to state 23 ]
  ! EQUAL           [ shift and go to state 24 ]
  ! GREATER         [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 26 ]
  ! GREATEREQUAL    [ shift and go to state 27 ]
  ! LESSEQUAL       [ shift and go to state 28 ]


state 49

    (21) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 21 (expression -> LPAREN expression RPAREN .)


state 50

    (27) arg_list -> IDENTIFIER .
    (28) arg_list -> IDENTIFIER . COMMA arg_list

    RPAREN          reduce using rule 27 (arg_list -> IDENTIFIER .)
    COMMA           shift and go to state 55


state 51

    (30) expression_function_call -> IDENTIFIER LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 56


state 52

    (29) arg_list -> NUMBER .

    RPAREN          reduce using rule 29 (arg_list -> NUMBER .)


state 53

    (25) expression -> LAMBDA IDENTIFIER . . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 57

state 54

    (26) function_definition -> MEY LCURLY IDENTIFIER . COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON

    COMMA           shift and go to state 58


state 55

    (28) arg_list -> IDENTIFIER COMMA . arg_list
    (27) arg_list -> . IDENTIFIER
    (28) arg_list -> . IDENTIFIER COMMA arg_list
    (29) arg_list -> . NUMBER

    IDENTIFIER      shift and go to state 50
    NUMBER          shift and go to state 52

    arg_list                       shift and go to state 59

state 56

    (30) expression_function_call -> IDENTIFIER LPAREN arg_list RPAREN .

    SEMICOLON       reduce using rule 30 (expression_function_call -> IDENTIFIER LPAREN arg_list RPAREN .)


state 57

    (25) expression -> LAMBDA IDENTIFIER . expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .)
    RPAREN          reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28

  ! PLUS            [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! MULTIPLY        [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! AND             [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! OR              [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! EQUAL           [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! GREATER         [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! LESS            [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! GREATEREQUAL    [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]
  ! LESSEQUAL       [ reduce using rule 25 (expression -> LAMBDA IDENTIFIER . expression .) ]


state 58

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA . LPAREN arg_list RPAREN RCURLY expression SEMICOLON

    LPAREN          shift and go to state 60


state 59

    (28) arg_list -> IDENTIFIER COMMA arg_list .

    RPAREN          reduce using rule 28 (arg_list -> IDENTIFIER COMMA arg_list .)


state 60

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN . arg_list RPAREN RCURLY expression SEMICOLON
    (27) arg_list -> . IDENTIFIER
    (28) arg_list -> . IDENTIFIER COMMA arg_list
    (29) arg_list -> . NUMBER

    IDENTIFIER      shift and go to state 50
    NUMBER          shift and go to state 52

    arg_list                       shift and go to state 61

state 61

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list . RPAREN RCURLY expression SEMICOLON

    RPAREN          shift and go to state 62


state 62

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN . RCURLY expression SEMICOLON

    RCURLY          shift and go to state 63


state 63

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY . expression SEMICOLON
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULTIPLY expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression MODULO expression
    (12) expression -> . expression AND expression
    (13) expression -> . expression OR expression
    (14) expression -> . expression NOTEQUAL expression
    (15) expression -> . expression EQUAL expression
    (16) expression -> . expression GREATER expression
    (17) expression -> . expression LESS expression
    (18) expression -> . expression GREATEREQUAL expression
    (19) expression -> . expression LESSEQUAL expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . BOOLEAN
    (24) expression -> . IDENTIFIER
    (25) expression -> . LAMBDA IDENTIFIER . expression

    NOT             shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    BOOLEAN         shift and go to state 10
    IDENTIFIER      shift and go to state 31
    LAMBDA          shift and go to state 12

    expression                     shift and go to state 64

state 64

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression . SEMICOLON
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULTIPLY expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . MODULO expression
    (12) expression -> expression . AND expression
    (13) expression -> expression . OR expression
    (14) expression -> expression . NOTEQUAL expression
    (15) expression -> expression . EQUAL expression
    (16) expression -> expression . GREATER expression
    (17) expression -> expression . LESS expression
    (18) expression -> expression . GREATEREQUAL expression
    (19) expression -> expression . LESSEQUAL expression

    SEMICOLON       shift and go to state 65
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    MULTIPLY        shift and go to state 18
    DIVIDE          shift and go to state 19
    MODULO          shift and go to state 20
    AND             shift and go to state 21
    OR              shift and go to state 22
    NOTEQUAL        shift and go to state 23
    EQUAL           shift and go to state 24
    GREATER         shift and go to state 25
    LESS            shift and go to state 26
    GREATEREQUAL    shift and go to state 27
    LESSEQUAL       shift and go to state 28


state 65

    (26) function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .

    NOT             reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    LPAREN          reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    NUMBER          reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    BOOLEAN         reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    LAMBDA          reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    MEY             reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)
    $end            reduce using rule 26 (function_definition -> MEY LCURLY IDENTIFIER COMMA LPAREN arg_list RPAREN RCURLY expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 57 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 57 resolved as shift
WARNING: shift/reduce conflict for LESS in state 57 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 57 resolved as shift
